package de.unikassel.vs.pdDebug.libzmq;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : zmq.h:44</i><br>
 * This file was autogenerated by <a href="https://github.com/nativelibs4java/JNAerator">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="https://github.com/nativelibs4java">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class zmq_msg_t extends Structure {
	/** C type : unsigned char[64] */
	public byte[] _ = new byte[64];
	public zmq_msg_t() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("_");
	}
	/** @param _ C type : unsigned char[64] */
	public zmq_msg_t(byte _[]) {
		super();
		if ((_.length != this._.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this._ = _;
	}
	public zmq_msg_t(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends zmq_msg_t implements Structure.ByReference {
		
	};
	public static class ByValue extends zmq_msg_t implements Structure.ByValue {
		
	};
}
